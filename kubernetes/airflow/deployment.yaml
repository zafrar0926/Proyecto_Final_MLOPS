apiVersion: v1
kind: ConfigMap
metadata:
  name: airflow-requirements
data:
  requirements.txt: |
    pandas==1.5.3
    numpy==1.24.3
    scikit-learn==1.2.2
    mlflow==2.9.2
    shap==0.44.1
    matplotlib==3.7.1
    requests==2.31.0
    sqlalchemy==1.4.50
    psycopg2-binary==2.9.9
    pyarrow==14.0.1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: airflow-webserver
spec:
  replicas: 1
  selector:
    matchLabels:
      app: airflow-webserver
  template:
    metadata:
      labels:
        app: airflow-webserver
    spec:
      serviceAccountName: airflow-init
      initContainers:
      - name: wait-for-db
        image: busybox
        command: ['sh', '-c', 'until nc -z postgresql 5432; do echo waiting for postgresql; sleep 2; done;']
      - name: wait-for-init
        image: bitnami/kubectl
        command: 
        - 'sh'
        - '-c'
        - |
          until kubectl get job airflow-init -n mlops -o jsonpath='{.status.conditions[?(@.type=="Complete")].status}' | grep True; do
            echo "waiting for airflow-init job to complete..."
            sleep 5
          done
      containers:
      - name: webserver
        image: apache/airflow:2.7.1
        command: ["/bin/bash"]
        args:
        - -c
        - |
          pip install --no-cache-dir -r /requirements/requirements.txt
          airflow webserver
        ports:
        - containerPort: 8080
        env:
        - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
          value: postgresql://airflow:airflow@postgresql:5432/airflow
        - name: AIRFLOW__CORE__EXECUTOR
          value: LocalExecutor
        - name: AIRFLOW__WEBSERVER__SECRET_KEY
          value: "your_secret_key_here"
        - name: AIRFLOW__WEBSERVER__EXPOSE_CONFIG
          value: "True"
        - name: AIRFLOW__WEBSERVER__AUTHENTICATE
          value: "False"
        volumeMounts:
        - name: dags
          mountPath: /opt/airflow/dags
        - name: requirements
          mountPath: /requirements
      volumes:
      - name: dags
        configMap:
          name: airflow-dags
      - name: requirements
        configMap:
          name: airflow-requirements
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: airflow-scheduler
spec:
  replicas: 1
  selector:
    matchLabels:
      app: airflow-scheduler
  template:
    metadata:
      labels:
        app: airflow-scheduler
    spec:
      serviceAccountName: airflow-init
      initContainers:
      - name: wait-for-db
        image: busybox
        command: ['sh', '-c', 'until nc -z postgresql 5432; do echo waiting for postgresql; sleep 2; done;']
      - name: wait-for-init
        image: bitnami/kubectl
        command: 
        - 'sh'
        - '-c'
        - |
          until kubectl get job airflow-init -n mlops -o jsonpath='{.status.conditions[?(@.type=="Complete")].status}' | grep True; do
            echo "waiting for airflow-init job to complete..."
            sleep 5
          done
      containers:
      - name: scheduler
        image: apache/airflow:2.7.1
        command: ["/bin/bash"]
        args:
        - -c
        - |
          pip install --no-cache-dir -r /requirements/requirements.txt
          airflow scheduler
        env:
        - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
          value: postgresql://airflow:airflow@postgresql:5432/airflow
        - name: AIRFLOW__CORE__EXECUTOR
          value: LocalExecutor
        volumeMounts:
        - name: dags
          mountPath: /opt/airflow/dags
        - name: requirements
          mountPath: /requirements
      volumes:
      - name: dags
        configMap:
          name: airflow-dags
      - name: requirements
        configMap:
          name: airflow-requirements 